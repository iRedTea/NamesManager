plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.8.0"
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'
    id("xyz.jpenilla.run-paper") version "1.1.0"
}

group = 'me.redtea.NamesManager'
version = '1.0.1.3-ALFA'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'codemc-releases'
        url = 'https://repo.codemc.org/repository/maven-releases/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = "https://repo.mattstudios.me/artifactory/public/"
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'
    compileOnly 'com.google.inject:guice:5.1.0'
    compileOnly 'com.google.inject.extensions:guice-assistedinject:5.1.0'
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0'
    compileOnly 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    compileOnly 'net.skinsrestorer:skinsrestorer-api:14.2.5'
    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'com.github.cryptomorin:XSeries:9.2.0'
    implementation 'dev.triumphteam:triumph-gui:3.1.2'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate("dev.triumphteam.gui", "me.redtea.namesmanager.gui.lib")
}

tasks {
    runServer {
        minecraftVersion("1.19.3")
    }
}